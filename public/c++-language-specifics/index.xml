<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; Language Specifics on #Define</title>
    <link>https://hashdefine2.netlify.app/c&#43;&#43;-language-specifics/</link>
    <description>Recent content in C&#43;&#43; Language Specifics on #Define</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 12 Jul 2020 11:30:30 +0530</lastBuildDate><atom:link href="https://hashdefine2.netlify.app/c++-language-specifics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Headers, Macros, and Compiler Flags</title>
      <link>https://hashdefine2.netlify.app/c&#43;&#43;-language-specifics/basics/</link>
      <pubDate>Sun, 12 Jul 2020 11:45:09 +0530</pubDate>
      
      <guid>https://hashdefine2.netlify.app/c&#43;&#43;-language-specifics/basics/</guid>
      <description>One header to include every standard library #include&amp;lt;bits/stdc++.h&amp;gt; Also includes unnecessary stuff and increases length of code for compilation. Saves time during typing. Not portable as it&amp;rsquo;s not part of the C++ standard. Available in GCC but not in all others.  Macros and typedef #define LL long long #define ULL unsigned long long #define LD long double  #define MOD 1e9+7 OR
typedef long long LL; typedef unsigned long long ULL; typedef long double LD; Usage:</description>
    </item>
    
    <item>
      <title>Useful Functions</title>
      <link>https://hashdefine2.netlify.app/c&#43;&#43;-language-specifics/useful-functions/</link>
      <pubDate>Mon, 13 Jul 2020 20:16:51 +0530</pubDate>
      
      <guid>https://hashdefine2.netlify.app/c&#43;&#43;-language-specifics/useful-functions/</guid>
      <description>Faster I/O printf/scanf is faster than cout/cin, but we can make cout/cin as faster by using below trick or simply use print/scanf in C++.
 ios_base::sync_with_stdio(false); cin.tie(NULL); OR
ios::sync_with_stdio(0); cin.tie(0);  Note that the newline &amp;ldquo;\n&amp;rdquo; works faster than endl, because endl always causes a flush operation.
 Explanation: Every C++ standard stream is synced with the corresponding standard C stream before program starts. We can stop synchronization by passing argument to ios::sync_with_stdio() as 0 or false.</description>
    </item>
    
  </channel>
</rss>
